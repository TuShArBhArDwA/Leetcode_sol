class Solution {
public:
    vector<int> findLonely(vector<int>& nums) {
        if(nums.size()<2){
            return nums;
        }
        sort(nums.begin(),nums.end());
        int cnt=1;
        vector<int>ans;
        for(int i=0;i<nums.size()-1;i++){
            if(nums.at(i)!=nums.at(i+1)){
                if(cnt==1){
                    if(i==0){
                        if(nums.at(i+1)!=nums.at(i)+1){
                            ans.push_back(nums.at(i));
                        }
                    }
                    else{
                        if(nums.at(i-1)!=nums.at(i)-1&&nums.at(i+1)!=nums.at(i)+1){
                            ans.push_back(nums.at(i));
                        }
                    }
                }
                cnt=1;
            }
            else{
                cnt++;
            }
        }
        if(cnt==1){
            if(nums.at(nums.size()-2)!=nums.at(nums.size()-1)-1){
                ans.push_back(nums.at(nums.size()-1));
            }
        }
        return ans;
    }
};